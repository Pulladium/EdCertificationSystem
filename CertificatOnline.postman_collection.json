{
	"info": {
		"_postman_id": "7d432a06-b8db-4402-85eb-a71ecd52d159",
		"name": "CertificatOnline",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14818054"
	},
	"item": [
		{
			"name": "CreateCertAndGenerateDocScenario",
			"item": [
				{
					"name": "CreateOrg Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Save Organization ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"orgId\", jsonData.organizationId);",
									"    pm.test(\"Organization created\", function () {",
									"        pm.expect(jsonData.status).to.equal(\"AWAITING\");",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"My organization2\",\n    \"address\":\"Jabliska 211\",\n    \"contactInfo\" :\"ivm-courses.cz\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/data/organization/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"organization",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "createNew Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Save Certificate ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"certId\", jsonData.certificateId);",
									"    pm.test(\"Certificate created\", function () {",
									"        pm.expect(jsonData.categories[0].categoryId).to.equal(1);",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new certificate title\",\r\n    \"description\":\"this is test cert\",\r\n    \"categoriesIds\" :[\r\n        1\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/data/certificates/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"certificates",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "addIssuersToCert Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Issuer added\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.issuers).to.not.be.empty;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n   {{orgId}}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/data/certificates//addIssuersToCert/{{certId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"certificates",
								"",
								"addIssuersToCert",
								"{{certId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "addParticipantFromData Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Participant added\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.participants).to.not.be.empty;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Bob\",\n    \"surname\" : \"Djoris\",\n    \"email\":\"bob.dj@mail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/data/certificates/addParticipant/{{certId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"certificates",
								"addParticipant",
								"{{certId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "gen-new-cert Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Save and verify document data\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.collectionVariables.set(\"docUUID\", jsonData[0].uuidOfDoc);",
									"    ",
									"    ",
									"    pm.expect(jsonData[0]).to.have.property('uuidOfDoc');",
									"    pm.expect(jsonData[0].participantKey).to.have.property('name', 'Bob');",
									"    pm.expect(jsonData[0].participantKey).to.have.property('surname', 'Djoris');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{certId}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/data/certificates-gen/massiveDocsForCert",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"certificates-gen",
								"massiveDocsForCert"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFilebyDocId Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/data-mongo/documents/{{docUUID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data-mongo",
								"documents",
								"{{docUUID}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "**Dont forget to get new access token**  \nall tests must pass and last request returns pdf file",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "clientSecret",
						"value": "**********",
						"type": "string"
					},
					{
						"key": "password",
						"value": "user_password",
						"type": "string"
					},
					{
						"key": "username",
						"value": "simpleUser",
						"type": "string"
					},
					{
						"key": "refreshRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "tokenRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "authRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "challengeAlgorithm",
						"value": "S256",
						"type": "string"
					},
					{
						"key": "grant_type",
						"value": "password_credentials",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "postman-certedu-api",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					},
					{
						"key": "client_authentication",
						"value": "header",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "http://localhost:8484/realms/CertEdu/protocol/openid-connect/token",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "CircularDepCategoryScenario",
			"item": [
				{
					"name": "createNewCat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Save Category ID\", () => { const jsonData = pm.response.json(); pm.collectionVariables.set(\"categoryId\", jsonData.categoryId);",
									"",
									"pm.test(\"Category created\", () => {",
									"    pm.expect(jsonData.name).to.equal(\"new Cat name\");",
									"    pm.expect(jsonData.categoryId).to.be.a('number');",
									"    pm.expect(jsonData.description).to.equal(\"Spring Boot\");",
									"});",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new Cat name\", \r\n    \"description\" : \"Spring Boot\",\r\n    \"certificates\": null,\r\n    \"parentCategory\" : null,\r\n    \"subCategories\" : null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/data/categories/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"categories",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "addParent",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/data/categories/putParent/3/child/{{categoryId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"categories",
								"putParent",
								"3",
								"child",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateCat Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\":{{categoryId}},\n    \"name\":\"updated name\", \n    \"description\" : \"rust rover\",\n    \"subCategoriesIds\" : [\n        2\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/data/categories/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"categories",
								"update"
							]
						}
					},
					"response": []
				}
			],
			"description": "returns RuntimeException: Circular dependency detected",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "clientSecret",
						"value": "**********",
						"type": "string"
					},
					{
						"key": "refreshRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "tokenRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "authRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "challengeAlgorithm",
						"value": "S256",
						"type": "string"
					},
					{
						"key": "username",
						"value": "meinadm",
						"type": "string"
					},
					{
						"key": "password",
						"value": "admin_password",
						"type": "string"
					},
					{
						"key": "grant_type",
						"value": "password_credentials",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "postman-certedu-api",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					},
					{
						"key": "client_authentication",
						"value": "header",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "http://localhost:8484/realms/CertEdu/protocol/openid-connect/token",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "DelParticipantFromGeneratedCertificateScenario",
			"item": [
				{
					"name": "CreateOrg",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Save Organization ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"orgId\", jsonData.organizationId);",
									"    pm.test(\"Organization created\", function () {",
									"        pm.expect(jsonData.status).to.equal(\"AWAITING\");",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"second My organization2\",\n    \"address\":\"volska 211\",\n    \"contactInfo\" :\"+932302323\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/data/organization/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"organization",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "createNew",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Save Certificate ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"certId\", jsonData.certificateId);",
									"    pm.test(\"Certificate created\", function () {",
									"        pm.expect(jsonData.categories[0].categoryId).to.equal(1);",
									"    });",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"second scne new certificate title\",\r\n    \"description\":\"this is test cert\",\r\n    \"categoriesIds\" :[\r\n        1\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/data/certificates/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"certificates",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "addIssuersToCert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Issuer added\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.issuers).to.not.be.empty;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n   {{orgId}}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/data/certificates//addIssuersToCert/{{certId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"certificates",
								"",
								"addIssuersToCert",
								"{{certId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "addParticipantFromData2Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Save Participant ID\", () => {",
									"    const jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData.participants).to.be.an('array').that.is.not.empty;",
									"    ",
									"    const participantId = jsonData.participants[0].participantId;",
									"    pm.collectionVariables.set(\"participantId\", participantId);",
									"    ",
									"",
									"    pm.test(\"Participant data is correct\", () => {",
									"        const participant = jsonData.participants[0];",
									"        pm.expect(participant.name).to.equal(\"Alon\");",
									"        pm.expect(participant.surname).to.equal(\"KJOS\");",
									"        pm.expect(participant.email).to.equal(\"jjj.ssuac@gmail.com\");",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Alon\",\n    \"surname\" : \"KJOS\",\n    \"email\":\"jjj.ssuac@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/data/certificates/addParticipant/{{certId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"certificates",
								"addParticipant",
								"{{certId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "gen-new-cert",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Save and verify document data\", function () {",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.collectionVariables.set(\"docUUID\", jsonData[0].uuidOfDoc);",
									"    ",
									"    ",
									"    pm.expect(jsonData[0]).to.have.property('uuidOfDoc');",
									"    pm.expect(jsonData[0].participantKey).to.have.property('name', 'Bob');",
									"    pm.expect(jsonData[0].participantKey).to.have.property('surname', 'Djoris');",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{certId}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/data/certificates-gen/massiveDocsForCert",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"certificates-gen",
								"massiveDocsForCert"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeParticipantFromCertificate",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{participantId}}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/data/certificates/removeParticipant/{{certId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data",
								"certificates",
								"removeParticipant",
								"{{certId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetFilebyDocId Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 500 error\", () => {",
									"    pm.response.to.have.status(500);",
									"    ",
									"    const jsonData = pm.response.json();",
									"    ",
									"    pm.expect(jsonData).to.have.property('timestamp');",
									"    pm.expect(jsonData).to.have.property('status', 500);",
									"    pm.expect(jsonData).to.have.property('error', 'Internal Server Error');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/data-mongo/documents/{{docUUID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data-mongo",
								"documents",
								"{{docUUID}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "clientSecret",
						"value": "**********",
						"type": "string"
					},
					{
						"key": "password",
						"value": "user_password",
						"type": "string"
					},
					{
						"key": "username",
						"value": "simpleUser",
						"type": "string"
					},
					{
						"key": "refreshRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "tokenRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "authRequestParams",
						"value": [],
						"type": "any"
					},
					{
						"key": "challengeAlgorithm",
						"value": "S256",
						"type": "string"
					},
					{
						"key": "grant_type",
						"value": "password_credentials",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "postman-certedu-api",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					},
					{
						"key": "client_authentication",
						"value": "header",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "http://localhost:8484/realms/CertEdu/protocol/openid-connect/token",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "DataService",
			"item": [
				{
					"name": "OrgCtrl",
					"item": [
						{
							"name": "admin",
							"item": [
								{
									"name": "rejectOrg",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/data/organization/rejectOrganization/2",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"data",
												"organization",
												"rejectOrganization",
												"2"
											]
										}
									},
									"response": []
								},
								{
									"name": "approveOrg",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/data/organization/approveOrganization/2",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"data",
												"organization",
												"approveOrganization",
												"2"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "getOrgById",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/data/organization/getById/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"organization",
										"getById",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateOrganization",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"organizationId\": 1,\n    \"name\": \" CTU\",\n    \"address\": \"Terronska 2228\",\n    \"contactInfo\": \"blablabla.der@gmail.com\",\n    \"certificatesIds\": [\n        1,\n        2\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/data/organization/update",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"organization",
										"update"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateOrg",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\" : \"IVM Open Gl avadce course\",\n    \"address\":\"Jabliska 211\",\n    \"contactInfo\" :\"ivm-courses.cz\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/data/organization/create",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"organization",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteOrg",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/data/organization/delete/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"organization",
										"delete",
										"2"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CertificateCTRL",
					"item": [
						{
							"name": "Depricated",
							"item": [
								{
									"name": "addIssuerFromData",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\" : \"Org Name\",\n    \"address\" : \"Olimpiska 223/1\",\n    \"contactInfo\" : \"lolol.dsds.eu\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/api/data/certificates/addIssuer/2",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"data",
												"certificates",
												"addIssuer",
												"2"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "createNew",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"n2ewCert\",\r\n    \"description\":\"this is test cert\",\r\n    \"categoriesIds\" :[\r\n        1\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/data/certificates/create",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"certificates",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "getCertbyID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/data/certificates/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"certificates",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "AddCat2Cert",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"certificateId\":2,\r\n    \"categoryId\":2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/data/certificates/addCategory",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"certificates",
										"addCategory"
									]
								}
							},
							"response": []
						},
						{
							"name": "addParticipantFromData",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Bob\",\n    \"surname\" : \"Djoris\",\n    \"email\":\"bob.dj@mail.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/data/certificates//addParticipant/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"certificates",
										"",
										"addParticipant",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "addIssuersToCert",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    1\n\n\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/data/certificates//addIssuersToCert/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"certificates",
										"",
										"addIssuersToCert",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "removeParticipantFromCertificate",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "2\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/data/certificates/removeParticipant/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"certificates",
										"removeParticipant",
										"2"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CategoryContrl",
					"item": [
						{
							"name": "createNew",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "accessTokenUrl",
											"value": "http://localhost:8484/realms/CertEdu/protocol/openid-connect/token",
											"type": "string"
										},
										{
											"key": "username",
											"value": "meinadm",
											"type": "string"
										},
										{
											"key": "clientSecret",
											"value": "7cW7EEWGBYoqWmB8McHaoRyL7lGahSQj",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin_password",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "password_credentials",
											"type": "string"
										},
										{
											"key": "client_authentication",
											"value": "header",
											"type": "string"
										},
										{
											"key": "clientId",
											"value": "cert-edu-api",
											"type": "string"
										},
										{
											"key": "tokenRequestParams",
											"value": [],
											"type": "any"
										},
										{
											"key": "tokenName",
											"value": "",
											"type": "string"
										},
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\":\"Dersdf\", \r\n    \"description\" : \"Spring Boot\",\r\n    \"certificates\": null,\r\n    \"parentCategory\" : null,\r\n    \"subCategories\" : null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8082/api/data/categories/create",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8082",
									"path": [
										"api",
										"data",
										"categories",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "getByIdDepth",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/data/categories/byId/0/depth/3",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"categories",
										"byId",
										"0",
										"depth",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "getAll",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/data/categories/all/depth/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"categories",
										"all",
										"depth",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteCatID",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/api/data/categories/delete/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"categories",
										"delete",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateCat",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\":1,\n    \"name\":\"NOT GHI\", \n    \"description\" : \"dSpringf Boot\",\n    \"parentCategoryId\" : 3,\n    \"subCategoriesIds\" : [\n        \n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/data/categories/update",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"categories",
										"update"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CertGen",
					"item": [
						{
							"name": "gen-new-cert",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "2",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/data/certificates-gen/massive_generate_and_save",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"data",
										"certificates-gen",
										"massive_generate_and_save"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "MongoService",
			"item": [
				{
					"name": "DocCtrl",
					"item": [
						{
							"name": "New Request",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						}
					]
				},
				{
					"name": "docCtrl",
					"item": [
						{
							"name": "New Request",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						}
					]
				},
				{
					"name": "GetFilebyDocId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/data-mongo/documents/677a632376fb0902c6241be6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"data-mongo",
								"documents",
								"677a632376fb0902c6241be6"
							]
						}
					},
					"response": []
				},
				{
					"name": "UploadFile",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": [
										"/home/palladusr/Pictures/Screenshots/Screenshot_20241227_202345.png",
										"/home/palladusr/IdeaProjects/EdCertificationSystem/cp01.pdf"
									]
								}
							]
						},
						"url": {
							"raw": "http://localhost:37701/api/data/documents",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "37701",
							"path": [
								"api",
								"data",
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "generateCertTEST",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"templateName\": \"random name no affect Template\",\n  \"participantKey\": {\n    \"name\": \"John\",\n    \"surname\": \"Doe\",\n    \"email\": \"john.doe@example.com\"\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:36375/api/data/documents-generate/generate_and_save",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "36375",
							"path": [
								"api",
								"data",
								"documents-generate",
								"generate_and_save"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "refreshTokenUrl",
				"value": "http://localhost:8484/realms/CertEdu/protocol/openid-connect/token",
				"type": "string"
			},
			{
				"key": "refreshRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "tokenRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "authRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "challengeAlgorithm",
				"value": "S256",
				"type": "string"
			},
			{
				"key": "username",
				"value": "meinadm",
				"type": "string"
			},
			{
				"key": "password",
				"value": "admin_password",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "password_credentials",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "dneU2rMIRHd9jXh6CnAfh2HVOOqKaoEK",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "postman-certedu-api",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "header",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "http://localhost:8484/realms/CertEdu/protocol/openid-connect/token",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "orgId",
			"value": ""
		},
		{
			"key": "certId",
			"value": ""
		},
		{
			"key": "docUUID",
			"value": ""
		},
		{
			"key": "categoryId",
			"value": ""
		},
		{
			"key": "participantId",
			"value": ""
		}
	]
}