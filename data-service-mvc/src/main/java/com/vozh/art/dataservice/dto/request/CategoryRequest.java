package com.vozh.art.dataservice.dto.request;

import com.vozh.art.dataservice.dto.response.CategoryResponse;
import com.vozh.art.dataservice.entity.Category;
import com.vozh.art.dataservice.service.CategoryService;
import jakarta.annotation.Nullable;
import jakarta.validation.constraints.NotBlank;
import lombok.*;

import java.util.Set;
import java.util.stream.Collectors;

@Data
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Builder
public class CategoryRequest {
    private Long id;
    @NotBlank
    private String name;
    @NotBlank
    private String description;

    private Long parentCategoryId;
    private Set<CategoryRequest> subCategories;

    public static Category mapToCategoryEntity(CategoryRequest request){
        if(request == null){
            throw new IllegalArgumentException("Request is null");
        }
        //if id is null will be generated by db, else updates existing
        Category catFromRequest = Category.builder()
                .id(request.getId())
                .name(request.getName())
                .description(request.getDescription())
                .build();
//        if(request.getParentCategory() != null){
//            catFromRequest.setParentCategory(mapToCategoryEntity(request.getParentCategory()));
//        }

        if(request.getSubCategories() != null){
            catFromRequest.setSubCategories(request.getSubCategories().stream()
                    .map(CategoryRequest::mapToCategoryEntity)
                    .collect(Collectors.toSet()));
        }
        return catFromRequest;

    }
}
